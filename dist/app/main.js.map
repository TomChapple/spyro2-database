{"version":3,"sources":["./src/app/level/level.component.html","./src/app/level/level.component.ts","./src/environments/environment.ts","./src/app/static-file-spyro2.service.ts","./src/app/preferences.service.ts","./src/app/spyro2.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/localised-text/localised-text.component.ts","./src/app/localised-text/localised-text.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n<h2 *ngIf=\"level.name\">\n    <app-localised-text [localText]=\"level.name\"></app-localised-text>\n</h2>\n<p>level works!!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Level } from '../level';\nimport { PreferencesService } from '../preferences.service';\n\n@Component({\n  selector: 'app-level',\n  templateUrl: './level.component.html',\n  styleUrls: ['./level.component.sass']\n})\nexport class LevelComponent implements OnInit {\n\n  constructor(private preferences: PreferencesService) {}\n\n  @Input() level: Level = {name(string) { return ''; }}\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Level } from \"./level\";\nimport { Locale } from \"./locale\";\nimport { Spyro2Service } from './spyro2.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaticFileSpyro2Service extends Spyro2Service {\n\n  get levels(): Level[] {\n    return [{name(string) { return \"Summer Forest\"; }}];\n  };\n\n  get locales(): Set<Locale> {\n    return new Set([{id: 'en-gb', name: 'English'}]);\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { Locale } from './locale';\nimport { Spyro2Service } from './spyro2.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreferencesService implements OnInit {\n\n  constructor(private service: Spyro2Service) {  }\n\n  get locales(): Set<Locale> {\n    return this.service.locales;\n  }\n\n  preferredLocale?: Locale;\n\n  ngOnInit() {\n    if (!this.preferredLocale) {\n      this.preferredLocale = this.locales.values().next().value;\n    }\n  }\n}\n\n","import { Injectable } from \"@angular/core\";\nimport { Level } from \"./level\";\nimport { Locale } from \"./locale\";\n\n@Injectable()\nexport abstract class Spyro2Service {\n\n    readonly abstract levels: Iterable<Level>;\n\n    readonly abstract locales: Set<Locale>;\n}\n","<h1>Spyro 2 Database</h1>\n\n<app-level [level]=\"level\" *ngFor=\"let level of levels\">\n</app-level>","import { Component } from '@angular/core';\nimport { Spyro2Service } from './spyro2.service'\nimport { Level } from './level'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n\n  constructor(private service: Spyro2Service) {  }\n\n  title = 'app';\n\n  get levels(): Iterable<Level> {\n    return this.service.levels;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LevelComponent } from './level/level.component';\n\nimport { Spyro2Service } from \"./spyro2.service\";\nimport { StaticFileSpyro2Service } from \"./static-file-spyro2.service\";\nimport { LocalisedTextComponent } from './localised-text/localised-text.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LevelComponent,\n    LocalisedTextComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {provide: Spyro2Service, useClass: StaticFileSpyro2Service }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LocalisedText } from '../localised-text';\nimport { PreferencesService } from '../preferences.service';\n\n@Component({\n  selector: 'app-localised-text',\n  templateUrl: './localised-text.component.html',\n  styleUrls: ['./localised-text.component.sass']\n})\nexport class LocalisedTextComponent implements OnInit {\n\n  @Input('localText') localisedText: LocalisedText = (locale) => \"\";\n\n  get preferredText(): String {\n    return this.localisedText(this.preferences.preferredLocale?.id ?? \"\");\n  }\n\n  constructor(private preferences: PreferencesService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span>{{preferredText}}</span>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}